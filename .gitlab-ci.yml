stages:
    - install
    - lint
    - format
    - tests

variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
    key:
        files:
            - poetry.lock
            - .gitlab-ci.yml
        prefix: ${CI_JOB_NAME}
    paths:
        - .venv
        - .cache/pip
        - .cache/pypoetry

.install-deps-template: &install-deps
    before_script:
        - python --version
        - pip install poetry
        - poetry --version
        - poetry install -vv
        - poetry run pre-commit install

# Install dependencies
install-dependencies:
    stage: install
    <<: *install-deps
    image: python:3.12
    script:
        - echo "Dependencies installed successfully!"

# Linting stage
lint:
    stage: lint
    <<: *install-deps
    image: python:3.12
    script:
        - poetry run pre-commit run black --all-files
        - poetry run pre-commit run isort --all-files
        - poetry run pre-commit run flake8 --all-files
        - poetry run pre-commit run codespell --all-files
    allow_failure: false # Fails CI if linting fails

# Formatting stage
format:
    stage: format
    <<: *install-deps
    image: python:3.12
    script:
        - poetry run pre-commit run black --all-files
        - poetry run pre-commit run isort --all-files

# Test stage
run-tests:
    stage: tests
    <<: *install-deps
    image: python:3.12
    script:
        - poetry run pytest --cov=solanaexporter --cov-report=term --cov-report=html --disable-warnings --cov-fail-under=70
    artifacts:
        paths:
            - htmlcov/
            - coverage.xml
        expire_in: 1 week
    coverage: "/TOTAL.+?([0-9]{1,3}%)/"

# Docstring validation (non-blocking)
check-docstring:
    stage: lint
    <<: *install-deps
    image: python:3.12
    script:
        - poetry run pydocstyle solanaexporter/
    allow_failure: true

# Mypy type checking (non-blocking)
type-check:
    stage: lint
    <<: *install-deps
    image: python:3.12
    script:
        - poetry run mypy --ignore-missing-imports solanaexporter/
    allow_failure: true
